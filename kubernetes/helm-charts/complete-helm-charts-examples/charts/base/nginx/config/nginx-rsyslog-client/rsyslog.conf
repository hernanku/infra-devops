###############################################
####  Broker rsylog client configurations  ####
###############################################

#### Debug Level ####
#$DebugLevel 2

#### MODULES ####
module(load="omstdout")
module(load="imfile" )

# Where to place auxiliary files
$WorkDirectory /app

# Include all config files in /etc/rsyslog.d/
$IncludeConfig /app/conf.d/*.conf


#### TEMPLATES ####
#Standard App Log Formatt for Broker Apps in OCP
template(name="AppLogFormat" type="list") {
    #Construct the headers and message as per rsyslog imtcp module requirements
	constant(value="<")
    property(name="pri")
    constant(value=">")
	property(name="timestamp" outname="timestamp"  dateFormat="rfc3339" )
    constant(value=" ")
	property(name="HOSTNAME" outname="hostname")
    constant(value=" ")
    property(name="syslogtag" outname="syslogtag")
	constant(value=" ")
	# Below are message part of rsyslog message. Current logging timestamp is not as per rfc3339 standard so rsyslog is not parsing the time avaliable in the log. To preserve the initial log timestamp, include hostname and other parameters as part of message and capture only the message part in rsyslog server for forwarding to splunk.
	property(name="msg"   position.from="1" position.to="28"  )
	property(name="HOSTNAME")
    constant(value=" ")
    property(name="syslogtag" )
    constant(value=" ")
    constant(value="OCP_")
	property(name="$.DATA_CENTER" )
	constant(value="_")
	property(name="$.REGION" )
	constant(value="_")
	property(name="$.ENVIRONMENT" )
	constant(value=" ")
	property(name="msg"   position.from="29"   )
	constant(value="\n")
	}
#NGINX ERROR LOG Format (convert nginx error log similar to broker standard app format) 
template(name="NginxErrorLogFormat" type="list") {
    #Construct the headers and message as per rsyslog imtcp module requirements    
	constant(value="<")
    property(name="pri")
    constant(value=">")
	property(name="timegenerated" dateFormat="rfc3339")
    constant(value=" ")
	property(name="HOSTNAME")
    constant(value=" ")
    property(name="syslogtag" position.from="1" position.to="32")
	constant(value=" ")
	# Below are message part of rsyslog message. Current nginx logging timestamp is not as per rfc3339 standard so rsyslog is not parsing the time avaliable in the log and capturing the time it starts reading the message from file. To format the log message similar to other logs capture all the details as part of message(include hostname and other parameters as part of message and capture only the message part in rsyslog server for forwarding to splunk).
	property(name="timestamp" dateFormat="rfc3339" position.from="1" position.to="10")
    constant(value=" ")
	property(name="timestamp" dateFormat="rfc3339" position.from="12" position.to="23")
    constant(value=" GMT ")
    property(name="HOSTNAME")
    constant(value=" ")
    property(name="syslogtag" )
    constant(value=" ")
	constant(value="OCP_")
	property(name="$.DATA_CENTER")
	constant(value="_")
	property(name="$.REGION")
	constant(value="_")
	property(name="$.ENVIRONMENT")
	constant(value=" ")
	# Using regex format the error log to standard log fromat for broker apps 
	property(name="rawmsg" regex.expression="\\[(([[:alpha:]]{1,})][[:space:]]([[:digit:]]{1,})#([[:digit:]]{1,}):[[:space:]](.*))"  regex.type="ERE" regex.nomatchmode="ZERO" regex.match="0" regex.submatch="3")
	constant(value=" [NGINX-Thread-")
	property(name="rawmsg" regex.expression="\\[(([[:alpha:]]{1,})][[:space:]]([[:digit:]]{1,})#([[:digit:]]{1,}):[[:space:]](.*))"  regex.type="ERE" regex.nomatchmode="ZERO" regex.match="0" regex.submatch="4")
	constant(value="] nginxErrorLog ")
	property(name="rawmsg" regex.expression="\\[(([[:alpha:]]{1,})][[:space:]]([[:digit:]]{1,})#([[:digit:]]{1,}):[[:space:]](.*))"  regex.type="ERE" regex.nomatchmode="ZERO" regex.match="0" regex.submatch="2")
    constant(value=" [nginx-server,,,false] ")
	property(name="rawmsg" regex.expression="\\[(([[:alpha:]]{1,})][[:space:]]([[:digit:]]{1,})#([[:digit:]]{1,}):[[:space:]](.*))"  regex.type="ERE" regex.nomatchmode="FIELD" regex.match="0" regex.submatch="5")
	constant(value="\n")
	}

#### INPUT CONFIG ####

#### Nginx Logs ####
input(type="imfile" tag="audit" file="/app/var/log/nginx/access*.log"  ruleset="updateEnvAndCallLogger" )
input(type="imfile" tag="nginxservice" file="/app/var/log/nginx/error*.log" ruleset="updateEnvAndCallLogger" )

#### Nginx OIDC Logs ####
input(type="imfile" tag="audit" file="/app/var/log/nginx/oidc_auth*.log" ruleset="updateEnvAndCallLogger" )
input(type="imfile" tag="nginxservice" file="/app/var/log/nginx/oidc_error*.log" ruleset="updateEnvAndCallLogger" )

#### Application Logs ####
input(type="imfile" tag="audit" file="/app/audit/*.log" ruleset="updateEnvAndCallLogger" )
input(type="imfile" tag="service" file="/app/logs/*.log" ruleset="updateEnvAndCallLogger" )



#### RULE SETS ####
ruleset(name="updateEnvAndCallLogger" ) {
	set $.DATA_CENTER=getenv("DATA_CENTER");
	set $.REGION=getenv("REGION");
	set $.ENVIRONMENT=getenv("ENVIRONMENT");
	
	if ($syslogtag == 'nginxservice') then {
		call writeNginxErrorLog
		stop
		}
	else if ($syslogtag == 'audit') or ($syslogtag == 'service') then {
		call writeAppLog
		stop
		}
	}
	
ruleset(name="writeNginxErrorLog") {
	action(type="omfwd" target="broker-rsyslog-server" port="6514" protocol="tcp"  template="NginxErrorLogFormat")
	# Enable below omstdout action only for debugging purpose	
	# action(type="omstdout"  template="NginxErrorLogFormat")
}
ruleset(name="writeAppLog") {
	action(type="omfwd" target="broker-rsyslog-server" port="6514" protocol="tcp"  template="AppLogFormat")
	# Enable below omstdout action only for debugging purpose	
	# action(type="omstdout"  template="AppLogFormat")
}
