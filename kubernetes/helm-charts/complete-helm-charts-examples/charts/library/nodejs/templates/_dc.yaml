{{- define "library-nodejs.dc.tpl" -}}
apiVersion: apps.openshift.io/v1
kind: DeploymentConfig
metadata:
  labels:
    app: {{ .Release.Name }}
    repo: broker-helm-charts
  name: {{ .Release.Name }}
  namespace: {{ .Release.Namespace }}
spec:
  replicas: {{ include "library-nodejs.util.resolve" (dict "key" "minReplicas" "context" $) }}
  selector:
    app: {{ .Release.Name }}
    deploymentconfig: {{ .Release.Name }}
  strategy:
    activeDeadlineSeconds: 21600
    resources: {}
    rollingParams:
      intervalSeconds: 1
      maxSurge: 25%
      maxUnavailable: 25%
      timeoutSeconds: 600
      updatePeriodSeconds: 1
    type: Rolling
  template:
    metadata:
      labels:
        app: {{ .Release.Name }}
        repo: broker-helm-charts
        deploymentconfig: {{ .Release.Name }}
    spec:
      containers:
      - env:
        - name: CERTIFICATE_PATH
          value: /app/certs/{{ include "library-nodejs.util.resolve" (dict "key" "certificateSecretName" "context" $) }}
        - name: CONFIG_SERVER
          value: {{ include "library-nodejs.util.resolve" (dict "key" "configServer" "context" $) }}
        - name: ENVIRONMENT
          value: {{ include "library-nodejs.util.resolve" (dict "key" "activeProfiles" "context" $) }}
        - name: ENABLE_EUREKA
          value: "false"
        - name: ENABLE_HTTPS
          value: "false"
        - name: ENABLE_OPEN_ID
          value: "true"
        - name: LOG_PATH_AUDIT
          value: /app/audit/audit.log
        - name: LOG_PATH_SERVICE
          value: /app/logs/service.log
        - name: CONFIGSERVER
          value: {{ include "library-nodejs.util.resolve" (dict "key" "configServer" "context" $) }}
        - name: configServer
          value: {{ include "library-nodejs.util.resolve" (dict "key" "configServer" "context" $) }}
        - name: ENV
          value: {{ include "library-nodejs.util.resolve" (dict "key" "activeProfiles" "context" $) }}
        - name: enableEureka
          value: "false"
        - name: enableHttps
          value: "false"
        - name: OPENIDENABLED
          value: "true"
        - name: auditLogFilePath
          value: /app/audit/audit.log
        - name: serverLogFilePath
          value: /app/logs/service.log
        - name: openidEnabled
          value: "true"
        - name: openIdEnabled
          value: "true"
        - name: NODE_TLS_REJECT_UNAUTHORIZED
          value: "0"
        image: {{ .Values.registryHost }}/{{ .Values.registryOrg }}/{{ .Release.Name }}:{{ include "library-nodejs.util.resolve" (dict "key" "imageVersion" "context" $) | default "latest" }}
        imagePullPolicy: Always
        livenessProbe:
          failureThreshold: 10
          httpGet:
            path: {{ include "library-nodejs.util.resolve" (dict "key" "healthEndpoint" "context" $) | default "/health"}}
            port: 8080
            scheme: HTTP
          initialDelaySeconds: {{ include "library-nodejs.util.resolve" (dict "key" "probeInitialDelaySeconds" "context" $) | default 60 }}
          periodSeconds: {{ include "library-nodejs.util.resolve" (dict "key" "probePeriodSeconds" "context" $) | default 60 }}
          successThreshold: 1
          timeoutSeconds: {{ include "library-nodejs.util.resolve" (dict "key" "probeTimeoutSeconds" "context" $) }}
        name: {{ .Release.Name }}
        ports:
        - containerPort: 8080
          protocol: TCP
        readinessProbe:
          failureThreshold: 10
          httpGet:
            path: {{ include "library-nodejs.util.resolve" (dict "key" "healthEndpoint" "context" $) | default "/health"}}
            port: 8080
            scheme: HTTP
          initialDelaySeconds: {{ include "library-nodejs.util.resolve" (dict "key" "probeInitialDelaySeconds" "context" $) | default 60 }}
          periodSeconds: {{ include "library-nodejs.util.resolve" (dict "key" "probePeriodSeconds" "context" $) | default 60 }}
          successThreshold: 1
          timeoutSeconds: {{ include "library-nodejs.util.resolve" (dict "key" "probeTimeoutSeconds" "context" $) }}
        resources:
          limits:
            cpu: {{ include "library-nodejs.util.resolve" (dict "key" "resourceLimitsCpu" "context" $) | default "250m" | quote }}
            memory: {{ include "library-nodejs.util.resolve" (dict "key" "resourceLimitsMemory" "context" $) | default "768Mi" | quote }}
          requests:
            cpu: {{ include "library-nodejs.util.resolve" (dict "key" "resourceRequestsCpu" "context" $) | default "100m" | quote }}
            memory: {{ include "library-nodejs.util.resolve" (dict "key" "resourceRequestsMemory" "context" $) | default "512Mi" | quote }}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /app/certs
          name: volume-certs
          readOnly: true
        - mountPath: /app/truststore
          name: volume-truststore
          readOnly: true
        - mountPath: /app/logs
          name: app-logs
        - mountPath: /app/audit
          name: audit-logs
      - env:
        - name: APPLICATION_NAME
          value: {{ .Release.Name }}
        - name: DATA_CENTER
          value: {{ .Values.dataCenter }}
        - name: REGION
          value: {{ .Values.region }}
        - name: ENVIRONMENT
          value: {{ .Values.environment }}
        image: {{ .Values.registryHost }}/{{ .Values.registryOrg }}/broker-rsyslog-client:latest
        imagePullPolicy: Always
        livenessProbe:
          exec:
            command:
            - /usr/bin/pgrep
            - rsyslogd
          failureThreshold: 10
          initialDelaySeconds: 20
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        name: {{ .Release.Name }}-logging-sidecar
        readinessProbe:
          exec:
            command:
            - /usr/bin/pgrep
            - rsyslogd
          failureThreshold: 10
          initialDelaySeconds: 20
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        resources:
          limits:
            cpu: {{ include "library-nodejs.util.resolve" (dict "key" "syslogClientResourceLimitsCpu" "context" $) }}
            memory: {{ include "library-nodejs.util.resolve" (dict "key" "syslogClientResourceLimitsMemory" "context" $) }}
          requests:
            cpu: {{ include "library-nodejs.util.resolve" (dict "key" "syslogClientResourceRequestsCpu" "context" $) }}
            memory: {{ include "library-nodejs.util.resolve" (dict "key" "syslogClientResourceRequestsMemory" "context" $) }}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /app/logs
          name: app-logs
        - mountPath: /app/audit
          name: audit-logs
        - mountPath: /app/config
          name: volume-rsyslog-config
      dnsConfig:
        searches:
        - wellpoint.com
      dnsPolicy: ClusterFirst
      imagePullSecrets:
      - name: {{ .Values.imagePullSecretName }}
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
      volumes:
      - emptyDir: {}
        name: app-logs
      - emptyDir: {}
        name: audit-logs
      - configMap:
          defaultMode: 420
          name: rsyslog-client
        name: volume-rsyslog-config
      - name: volume-truststore
        secret:
          defaultMode: 420
          secretName: brokertruststore
      - name: volume-certs
        secret:
          defaultMode: 420
          secretName: {{ include "library-nodejs.util.resolve" (dict "key" "certificateSecretName" "context" $) }}
  triggers:
  - type: ConfigChange
{{- end -}}
{{- define "library-nodejs.dc" -}}
{{- include "library-nodejs.util.merge" (append . "library-nodejs.dc.tpl") -}}
{{- end -}}
