{{- define "library-route.route.tpl" -}}
apiVersion: v1
items:
- apiVersion: route.openshift.io/v1
  kind: Route
  metadata:
    annotations:
      haproxy.router.openshift.io/timeout: {{ include "library-route.util.resolve" (dict "key" "routeTimeout" "context" $) | default "600s" }}
    labels:
      app: {{ .Release.Name }}
      repo: broker-helm-charts
    name: {{ .Release.Name }}-direct
    namespace: {{ .Release.Namespace }}
  spec:
    host: {{ .Release.Name }}-{{ .Release.Namespace }}.apps.{{ .Values.domainRoot }}
    port:
      targetPort: {{ include "library-route.util.resolve" (dict "key" "targetPort" "context" $) | default 8080 }}-tcp
    tls:
      insecureEdgeTerminationPolicy: {{ include "library-route.util.resolve" (dict "key" "routeTlsInsecureEdgeTerminationPolicy" "context" $) | default "Allow" }}
      termination: {{ include "library-route.util.resolve" (dict "key" "routeTlsTermination" "context" $) | default "edge" }}
    to:
      kind: Service
      name: {{ .Release.Name }}
      weight: 100
    wildcardPolicy: None
  status:
      ingress:
      - routerName: router

{{- $releaseName := .Release.Name -}}
{{- $routes := get (get .Values $releaseName ) "routes" | default (dict) -}}
{{- range $key, $val := $routes }}
- apiVersion: route.openshift.io/v1
  kind: Route
  metadata:
    annotations:
      haproxy.router.openshift.io/timeout: {{ include "library-route.util.resolve" (dict "key" "$val.timeout" "context" $) | default "60s" }}
    labels:
      app: {{ $.Release.Name }}
      repo: broker-helm-charts
    name: {{ $.Release.Name }}-{{ $val.Name }}
    namespace: {{ $.Release.Namespace }}
  spec:
    host: {{ $val.host }}
    path: {{ $val.path | default ""}}
    port:
      targetPort: {{ include "library-route.util.resolve" (dict "key" "targetPort" "context" $) | default 8080 }}-tcp
    tls:
      insecureEdgeTerminationPolicy: {{ include "library-route.util.resolve" (dict "key" "routeTlsInsecureEdgeTerminationPolicy" "context" $) | default "Allow" }}
      termination: {{ include "library-route.util.resolve" (dict "key" "routeTlsTermination" "context" $) | default "edge" }}
    to:
      kind: Service
      name: {{ $.Release.Name }}
      weight: 100
    wildcardPolicy: None
  status:
      ingress:
      - routerName: router
{{- end }}
kind: List
metadata: {}
{{- end -}}
{{- define "library-route.route" -}}
{{- include "library-route.util.merge" (append . "library-route.route.tpl") -}}
{{- end -}}
