{{- define "library-nginx.reencrypt.tpl" -}}
{{- if or (eq "uat" .Values.environment) (eq "prod" .Values.environment) }}
{{- $certificatePath := printf "config/certs/%s/**" .Values.environment }}
apiVersion: v1
kind: List
items:
- apiVersion: route.openshift.io/v1
  kind: Route
  metadata:
    annotations:
      haproxy.router.openshift.io/timeout: 600s
    labels:
      app: {{ .Release.Name }}
      repo: broker-helm-charts
    name: {{ .Release.Name }}-main
    namespace: {{ .Release.Namespace }}
  spec:
    host: {{ .Values.appHost }}
    path: ""
    port:
      targetPort: {{ .Values.port | default 8080 }}-tcp
    tls:
      {{ range $path, $_ :=  .Files.Glob $certificatePath }}
      {{$path | base}}: |
{{ $.Files.Get $path | indent 8 }}
    {{ end }}
      termination: reencrypt
    to:
      kind: Service
      name: {{ .Release.Name }}
      weight: 100
    wildcardPolicy: None
  status:
      ingress:
      - routerName: router
- apiVersion: route.openshift.io/v1
  kind: Route
  metadata:
    labels:
      app: {{ .Release.Name }}
      repo: broker-helm-charts
    name: {{ .Release.Name }}-proxy
    namespace: {{ .Release.Namespace }}
  spec:
    host: nginx-brkportal.apps.{{ .Values.domainRoot }}
    port:
      targetPort: {{ .Values.port | default 8080 }}-tcp
    tls:
      {{ range $path, $_ :=  .Files.Glob $certificatePath }}
      {{$path | base}}: |
{{ $.Files.Get $path | indent 8 }}
    {{ end }}
      termination: reencrypt
    to:
      kind: Service
      name: {{ .Release.Name }}
      weight: 100
    wildcardPolicy: None
  status:
      ingress:
      - routerName: router
{{- end -}}
{{- end -}}
{{- define "library-nginx.reencrypt" -}}
{{- include "library-nginx.util.merge" (append . "library-nginx.reencrypt.tpl") -}}
{{- end -}}
