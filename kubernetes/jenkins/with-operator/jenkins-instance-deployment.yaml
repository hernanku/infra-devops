---
apiVersion: jenkins.io/v1alpha2
kind: Jenkins
metadata:
  name: master
  namespace: jenkins-operator
spec:
  configurationAsCode:
    configurations: 
    - name: jenkins-master-sytem-config
    secret:
      name: ""
  groovyScripts:
    configurations: []
    secret:
      name: ""
  jenkinsAPISettings:
    authorizationStrategy: createUser
  serviceAccount: 
    annotations:
      name: "jenkins-master"
  master:
    disableCSRFProtection: false
    securityContext:
        runAsUser: 1000
        fsGroup: 1000
    basePlugins:
      - name: kubernetes
        version: "1.29.6"
      - name: workflow-job
        version: "2.41"
      - name: workflow-aggregator
        version: "2.6"
      - name: git
        version: "4.7.2"
      - name: job-dsl
        version: "1.77"
      - name: configuration-as-code
        version: "1.51"
      - name: kubernetes-credentials-provider
        version: "0.18-1"
      - name: durable-task
        version: "1.37"
    plugins: 
      - name: aws-credentials
        version: "1.29"
    containers:
    - name: jenkins-master
      image: jenkins/jenkins:2.289.2-lts-alpine
      imagePullPolicy: Always
      livenessProbe:
        failureThreshold: 12
        httpGet:
          path: /login
          port: 8080
          scheme: HTTP
        initialDelaySeconds: 60
        periodSeconds: 9
        successThreshold: 1
        timeoutSeconds: 3
      readinessProbe:
        failureThreshold: 3
        httpGet:
          path: /login
          port: 8080
          scheme: HTTP
        initialDelaySeconds: 60
        periodSeconds: 9
        successThreshold: 1
        timeoutSeconds: 3
      resources:
        limits:
          cpu: 1000m
          memory: 2Gi
        requests:
          cpu: 200m
          memory: 256Mi
      volumeMounts:
      - mountPath: /jenkins-home # Jenkins home volume
        name: jenkinshome
    # - name: backup # container responsible for the backup and restore
    #   env:
    #   - name: BACKUP_DIR
    #     value: /backup
    #   - name: JENKINS_HOME
    #     value: /jenkins-home
    #   - name: BACKUP_COUNT
    #     value: "3" # keep only the 2 most recent backups
    #   image: virtuslab/jenkins-operator-backup-pvc:v0.1.0 # look at backup/pvc directory
    #   imagePullPolicy: IfNotPresent
    #   volumeMounts:
    #   - mountPath: /jenkins-home # Jenkins home volume
    #     name: jenkinshome
    #   # - mountPath: /backup # backup volume
    #   #   name: jenkinsbackup
    #   resources:
    #     limits:
    #       cpu: 100m
    #       memory: 1Gi
    #     requests:
    #       cpu: 50m
    #       memory: 256Mi
    volumes:
    # - name: jenkinsbackup # PVC volume where backups will be stored
    #   persistentVolumeClaim:
    #     claimName: jenkins-backup
    - name: jenkinshome # PVC volume where backups will be stored
      persistentVolumeClaim:
        claimName: jenkins-home
  # backup:
  #   containerName: backup # container name is responsible for backup
  #   action:
  #     exec:
  #       command:
  #       - /home/user/bin/backup.sh # this command is invoked on "backup" container to make backup, for example /home/user/bin/backup.sh <backup_number>, <backup_number> is passed by operator
  #   # getLatestAction:
  #   #   exec:
  #   #     command:
  #   #     - /home/user/bin/get-latest.sh # this command is invoked on "backup" container to get last backup number before pod deletion. If you don't omit it in CR, you can lose data
  #   interval: 86400 # how often make backup in seconds
  #   makeBackupBeforePodDeletion: false # make a backup before pod deletion
  service:
    type: NodePort
    port: 8080

