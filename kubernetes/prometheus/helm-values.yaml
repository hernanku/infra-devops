
fullnameOverride: "prometheus"
kubeTargetVersionOverride: ""
kubeVersionOverride: ""

defaultRules:
  create: true
  # rules:
  #   alertmanager: true
  #   etcd: true
  #   configReloaders: true
  #   general: true
  #   k8s: true
  #   kubeApiserverAvailability: true
  #   kubeApiserverBurnrate: true
  #   kubeApiserverHistogram: true
  #   kubeApiserverSlos: true
  #   kubeControllerManager: true
  #   kubelet: true
  #   kubeProxy: true
  #   kubePrometheusGeneral: true
  #   kubePrometheusNodeRecording: true
  #   kubernetesApps: true
  #   kubernetesResources: true
  #   kubernetesStorage: true
  #   kubernetesSystem: true
  #   kubeSchedulerAlerting: true
  #   kubeSchedulerRecording: true
  #   kubeStateMetrics: true
  #   network: true
  #   node: true
  #   nodeExporterAlerting: true
  #   nodeExporterRecording: true
  #   prometheus: true
  #   prometheusOperator: true
  appNamespacesTarget: ".*"

  runbookUrl: "https://runbooks.prometheus-operator.dev/runbooks"

  disabled: {}
  # KubeAPIDown: true

global:
  rbac:
    create: true
    createAggregateClusterRoles: true

  imageRegistry: ""

alertmanager:
  enabled: true
  apiVersion: v2
  serviceAccount:
    create: true

  config:
    global:
      resolve_timeout: 5m
    inhibit_rules:
      - source_matchers:
          - 'severity = critical'
        target_matchers:
          - 'severity =~ warning|info'
        equal:
          - 'namespace'
          - 'alertname'
      - source_matchers:
          - 'severity = warning'
        target_matchers:
          - 'severity = info'
        equal:
          - 'namespace'
          - 'alertname'
      - source_matchers:
          - 'alertname = InfoInhibitor'
        target_matchers:
          - 'severity = info'
        equal:
          - 'namespace'
    route:
      group_by: ['namespace']
      group_wait: 30s
      group_interval: 5m
      repeat_interval: 12h
      receiver: 'null'
      routes:
      - receiver: 'null'
        matchers:
          - alertname =~ "InfoInhibitor|Watchdog"
    receivers:
    - name: 'null'
    templates:
    - '/etc/alertmanager/config/*.tmpl'



prometheus:
  enabled: true
  annotations: {}
  serviceAccount:
    create: true
  thanosService:
    enabled: false
  thanosServiceMonitor:
    enabled: false
  thanosServiceExternal:
    enabled: false
    image:
      registry: quay.io
      repository: prometheus/prometheus
      tag: v2.39.1

    replicas: 1
    resources: {}
    # requests:
    #   memory: 400Mi

  thanosRulerSpec:
    image:
      registry: quay.io
      repository: thanos/thanos
      tag: v0.28.1
