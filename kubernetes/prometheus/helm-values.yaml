rbac:
  create: true

podSecurityPolicy:
  enabled: false

imagePullSecrets: []
serviceAccounts:
  server:
    create: true
    name: ""
    annotations: {}

configmapReload:
  prometheus:
    enabled: true
    name: configmap-reload
    image:
      repository: jimmidyson/configmap-reload
      tag: v0.8.0
      digest: ""
      pullPolicy: IfNotPresent

server:
  name: server
  sidecarTemplateValues: {}
  image:
    repository: quay.io/prometheus/prometheus
    tag: ""
    digest: ""
    pullPolicy: IfNotPresent

  extraFlags:
    - web.enable-lifecycle
  configPath: /etc/config/prometheus.yml
  storagePath: ""
  global:
    scrape_interval: 1m
    scrape_timeout: 10s
    evaluation_interval: 1m
  persistentVolume:
    enabled: false
    accessModes:
      - ReadWriteOnce
    labels: {}
    annotations: {}
    existingClaim: ""
    mountPath: /data
    size: 8Gi
    storageClass: "vsphere-csi-sc"
  emptyDir:
    sizeLimit: "8Gi"

networkPolicy:
  enabled: false
forceNamespace: ""

alertmanager:
  enabled: true
  persistence:
    enabled: false
    storageClass: "vsphere-csi-sc"
    accessModes:
      - ReadWriteOnce
    size: "2Gi"
  podSecurityContext:
    runAsUser: 65534
    runAsNonRoot: true
    runAsGroup: 65534
    fsGroup: 65534

kube-state-metrics:
  enabled: true
prometheus-node-exporter:
  enabled: true
  rbac:
    pspEnabled: false
  containerSecurityContext:
    allowPrivilegeEscalation: false

prometheus-pushgateway:
  enabled: true
  serviceAnnotations:
    prometheus.io/probe: pushgateway

